<?php

/**
 * @file
 * Contains the sample_minter.module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 *
 * This example adds a field to the Persistent Identifiers admin
 * settings form that is specific to the minter provided by this module.
 * The value of the field is saved in the submit callback below.
 */
function sample_minter_form_alter(&$form, FormStateInterface &$form_state, $form_id) {
  if ($form_id == 'persistent_identifiers_admin_settings') {
    $config = \Drupal::config('sample_minter.settings');
    $form['sample_minter_namespace'] = [
      '#type' => 'textfield',
      '#access' => TRUE,
      '#title' => 'Sample identifier namespace',
      '#default_value' => $config->get('sample_minter_namespace'),
      '#description' => t("This string will be prepended to the random number generated by this minter."),
      '#states' => [
        'visible' => [
          ':input[id="persistent_identifiers_minter"]' => ['value' => 'sample_minter.minter.sample'],
        ],
      ],
    ];

    $form['#submit'][] = 'sample_minter_submit';
  }
}

/**
 * Submit callback.
 *
 * @param array $form
 *   The form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The form state.
 */
function sample_minter_submit(array &$form, FormStateInterface $form_state) {
  $namespace = $form_state->getValue('sample_minter_namespace', 'sample:');
  $config_factory = \Drupal::configFactory();
  $config_factory->getEditable('sample_minter.settings')
    ->set('sample_minter_namespace', trim($namespace))
    ->save();
}
